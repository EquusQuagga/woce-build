VERSION  = 0.0.1

LEVEL=../..

build::

include $(LEVEL)/Makefile.common

.PHONY: build unpack
build:: build/$(CONFIG)/.built-WebKitSupplemental-${VERSION}
unpack: build/$(CONFIG)/.unpacked

### Unpack the software and build it
#build/$(CONFIG)/.unpacked: $(ISIS_DL)
#	-rm -rf build/$(CONFIG)
#	mkdir -p build/$(CONFIG)/src
#	$(call EXTRACT,ISIS,build/$(CONFIG)/src,--strip=1)
#	touch $@

INCLUDE_DIRS := -I$(STAGING_DIR)/ISIS_OUT/include/ -I$(STAGING_DIR)/usr/include/ -I$(STAGING_DIR)/usr/include/glib-2.0/ -I$(STAGING_DIR)/usr/include/QtWebKit/
QTPATH := $(shell readlink -f $(LEVEL)/packages/sysmgr/qt4/build/armv7)
QMAKE_CXX := $(TCDIR)/bin/arm-none-linux-gnueabi-g++
QMAKE_CC := $(TCDIR)/bin/arm-none-linux-gnueabi-gcc
QMAKE_AR := $(TCDIR)/bin/arm-none-linux-gnueabi-ar
QMAKE_RANLIB := $(TCDIR)/bin/arm-none-linux-gnueabi-ranlib
QMAKE_STRIP := $(TCDIR)/bin/arm-none-linux-gnueabi-strip
QMAKE_LINK := $(TCDIR)/bin/arm-none-linux-gnueabi-g++

QMAKE := " $(QTPATH)/bin/qmake-palm QTDIR=$(QTPATH) QMAKE_CXX=$(QMAKE_CXX) QMAKE_CC=$(QMAKE_CC) QMAKE_AR='$(QMAKE_AR) -r' QMAKE_RANLIB=$(QMAKE_RANLIB) QMAKE_STRIP=$(QMAKE_STRIP) QMAKE_LINK=$(QMAKE_LINK) STAGING_INCDIR=$(STAGING_DIR)/usr/include"



build/$(CONFIG)/.config-WebKitSupplemental-${VERSION}: build/$(CONFIG)/.unpacked
	touch $@

build/$(CONFIG)/.built-WebKitSupplemental-${VERSION}: build/$(CONFIG)/.config-WebKitSupplemental-${VERSION}
	make -C build/$(CONFIG)/src/WebKitSupplemental/ INCLUDES="$(INCLUDE_DIRS)" DISTRO_TYPE=release TARGET_ARCH=arm INCLUDE_DIR=$(STAGING_DIR)/usr/include/ LIB_DIR=$(STAGING_DIR)/usr/lib/ QTDIR=$(QTPATH) QMAKE=$(QMAKE) INSTALL_DIR=$(STAGING_DIR) configure all install
	touch $@

